logging:
  version: 1
  disable_existing_loggers: False
  root:
    handlers:
      - default
      - console
    level: DEBUG
  loggers:
    idp:
      level: DEBUG
  handlers:
    default:
      class: logging.FileHandler
      filename: 'debug.log'
      formatter: default
    console:
      class: logging.StreamHandler
      stream: 'ext://sys.stdout'
      formatter: default
  formatters:
    default:
      format: '%(asctime)s %(name)s %(levelname)s %(message)s'

domain: &domain 127.0.0.1
port: &port 4000
base_url: &base "https://{domain}:{port}"

httpc_params:
  verify: False

keydefs: &keydef
  -
    "type": "RSA"
    "key": ''
    "use": ["sig"]
  -
    "type": "EC"
    "crv": "P-256"
    "use": ["sig"]

rp_keys:
  private_path: 'private/jwks.json'
  key_defs: *keydef
  public_path: 'static/jwks.json'
  # this will create the jwks files if they absent
  read_only: False
  uri_path: 'static/jwks.json'

# information used when registering the client, this may be the same for all OPs

client_preferences: &prefs
  application_name: rphandler
  application_type: web
  contacts:
    - ops@example.com
  response_types:
    - code
  scope:
    - openid
    - profile
    - email
    - address
    - phone
  token_endpoint_auth_method:
    - private_key_jwt

services: &services
  discovery:
    class: fedservice.rp.provider_info_discovery.FedProviderInfoDiscovery
    kwargs: {}
  registration:
    class: fedservice.rp.registration.Registration
    kwargs: {}
  authorization:
    class: oidcrp.oidc.authorization.Authorization
    kwargs: {}
  accesstoken:
    class: oidcrp.oidc.access_token.AccessToken
    kwargs: {}
  refresh_accesstoken:
    class: oidcrp.oidc.refresh_access_token.RefreshAccessToken
    kwargs: {}
  userinfo:
    class: oidcrp.oidc.userinfo.UserInfo
    kwargs: {}
  end_session:
    class: oidcrp.oidc.end_session.EndSession
    kwargs: {}

federation: &federation
  entity_id: "https://{domain}:{port}/{{}}"
  keys:
    private_path: 'private/fed_keys.json'
    key_defs: *keydef
    public_path: 'static/fed_keys.json'
    read_only: false
  authority_hints: authority_hints.json
  trusted_roots: trusted_roots.json
  priority:
    - 'https://127.0.0.1:6000/eid/feide.no'
    - 'https://127.0.0.1:6000/eid/swamid.se'
  entity_type: openid_relying_party
  opponent_entity_type: openid_provider
  registration_type: explicit
#  add_on:
#    ssc:
#      function: fedservice.op.add_on.ssc.add_ssc_support
#      kwargs:
#        ssc_dir: ssc

# The keys in this dictionary are the OPs short user friendly name
# not the issuer (iss) name.

clients:
  # The ones that support webfinger, OP discovery and client registration
  # This is the default, any client that is not listed here is expected to
  # support dynamic discovery and registration.
  "":
    client_preferences: *prefs
    redirect_uris: null
    services: *services
  # Supports OP information lookup but not client registration
  local:
    issuer: "https://{domain}:5000"
    # entity_id: "https://{domain}:{port}/local"
    client_preferences: *prefs
    redirect_uris: ["https://{domain}:{port}/authz_cb/local"]
    services: *services

webserver:
  port: *port
  server_cert: "certs/cert.pem"
  server_key: "certs/key.pem"
  domain: *domain

