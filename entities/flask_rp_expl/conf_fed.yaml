baseurl: &base "https://localhost:4000"

http_params:
  verify: false

keydefs: &keydef
  -
    "type": "RSA"
    "key": ''
    "use": ["sig"]
  -
    "type": "EC"
    "crv": "P-256"
    "use": ["sig"]

html_home: 'html'
secret_key: 'secret_key'
session_cookie_name: 'florp_expl'
preferred_url_scheme: 'https'

oidc_keys:
  private_path: './private/jwks.json'
  key_defs: *keydef
  public_path: './static/jwks.json'
  # this will create the jwks files if they absent
  read_only: False
  uri_path: 'static/jwks.json'

# information used when registering the client, this may be the same for all OPs

client_preferences: &prefs
  application_name: rphandler
  application_type: web
  contacts: [ops@example.com]
  response_types: [code]
  scope: [openid, profile, email, address, phone]
  token_endpoint_auth_method: [client_secret_basic, client_secret_post]

services: &services
  discovery:
    class: fedservice.rp.provider_info_discovery.FedProviderInfoDiscovery
    kwargs: {}
  registration:
    class: fedservice.rp.registration.FedRegistration
    kwargs: {}
  authorization:
    class: oidcservice.oidc.authorization.Authorization
    kwargs: {}
  accesstoken:
    class: oidcservice.oidc.access_token.AccessToken
    kwargs: {}
  refresh_accesstoken:
    class: oidcservice.oidc.refresh_access_token.RefreshAccessToken
    kwargs: {}
  userinfo:
    class: oidcservice.oidc.userinfo.UserInfo
    kwargs: {}
  end_session:
    class: oidcservice.oidc.end_session.EndSession
    kwargs: {}

federation: &federation
  entity_id: *base
  signing_keys:
    private_path: 'private/fed_keys.json'
    key_defs: *keydef
    public_path: 'static/fed_keys.json'
    read_only: false
  authority_hints: authority_hints.json
  trusted_roots: trusted_roots.json
  priority: []
  entity_type: openid_relying_party
  opponent_entity_type: openid_provider
  add_on:
    ssc:
      function: fedservice.op.add_on.ssc.add_ssc_support
      kwargs:
        ssc_dir: ssc


# The keys in this dictionary are the OPs short user friendly name
# not the issuer (iss) name.

clients:
  # The ones that support webfinger, OP discovery and client registration
  # This is the default, any client that is not listed here is expected to
  # support dynamic discovery and registration.
  "":
    client_preferences: *prefs
    redirect_uris: None
    services: *services
    client_cert: 'certs/client1.crt'
    client_key: 'certs/client1.key'
  # Supports OP information lookup but not client registration
  local:
    issuer: "https://127.0.0.1:5000"
    client_preferences: *prefs
    services: *services
    client_cert: 'certs/client2.crt'
    client_key: 'certs/client2.key'

# Whether an attempt to fetch the userinfo should be made
USERINFO: true

webserver:
  port: 4000
  server_cert: "certs/cert.pem"
  server_key: "certs/key.pem"
  ca_bundle: ''
  domain: '127.0.0.1'
